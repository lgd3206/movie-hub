generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Movie {
  id            String   @id @default(cuid())
  title         String
  originalTitle String?
  year          Int
  rating        Float?
  duration      Int?
  genre         String[]
  director      String?
  actors        String?
  plot          String?  @db.Text
  posterUrl     String?
  imdbId        String?  @unique
  tmdbId        Int?     @unique
  
  slug          String   @unique
  keywords      String?
  
  viewCount     Int      @default(0)
  downloadCount Int      @default(0)
  
  status        Status   @default(PENDING)
  
  downloadLinks DownloadLink[]
  submissions   Submission[]
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  @@index([status])
  @@index([year])
  @@index([rating])
  @@index([viewCount])
  @@fulltext([title, originalTitle, plot])
}

model DownloadLink {
  id          String      @id @default(cuid())
  movieId     String
  platform    Platform
  linkType    LinkType
  url         String      @db.Text
  password    String?
  quality     Quality
  size        String?
  format      String?
  
  isActive    Boolean     @default(true)
  lastChecked DateTime?
  checkCount  Int         @default(0)
  failCount   Int         @default(0)
  
  sourceUrl   String?
  sourceName  String?
  
  movie       Movie       @relation(fields: [movieId], references: [id], onDelete: Cascade)
  
  createdAt   DateTime    @default(now())
  
  @@index([movieId, platform])
  @@index([isActive])
  @@index([quality])
}

model Submission {
  id           String           @id @default(cuid())
  movieId      String?
  movieTitle   String
  downloadUrls Json
  description  String?          @db.Text
  contactInfo  String?
  status       SubmissionStatus @default(PENDING)
  adminNotes   String?          @db.Text
  
  movie        Movie?           @relation(fields: [movieId], references: [id])
  
  createdAt    DateTime         @default(now())
  processedAt  DateTime?
  
  @@index([status])
  @@index([createdAt])
}

enum Status {
  PENDING
  APPROVED
  REJECTED
  DELETED
}

enum Platform {
  QUARK
  BAIDU
  ALIYUN
  THUNDER
  OTHER
}

enum LinkType {
  DIRECT
  CLOUD_DRIVE
  MAGNET
}

enum Quality {
  CAM
  TS
  TC
  DVD
  HD
  BD
  UHD_4K
}

enum SubmissionStatus {
  PENDING
  APPROVED
  REJECTED
}